local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Player = Players.LocalPlayer
local Backpack = Player.Backpack

local GameEvent: RemoteEvent = ReplicatedStorage:WaitForChild("Event")

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/lolz59/library/refs/heads/main/ice.lua"))()

local Menu = library.new("Trench war UI")

local Main = Menu:CreateSection("Main")

local states = {
	HitboxEnabled = false,
	HitboxSize = 2,
	Nametags = false,
	Highlight = false,
	Multiplier = 1,
}

Main:CreateSlider("Damage mutliplier", 100, function(value)
	states.Multiplier = value
end)

Main:CreateToggle("Get sniper", function(enabled)
	local Character = Player.Character
	
	while (not Backpack:FindFirstChild("Sniper")) and enabled do
		GameEvent:FireServer(GameEvent, "Spawn", Character.PrimaryPart.Position)
		task.wait(0.2)
	end
end)

Main:CreateButton("Kill all", function()
	for i, player in pairs(Players:GetPlayers()) do
		if player ~= Player and Player.Character then
			local tool = Player.Character:FindFirstChildWhichIsA("Tool")
			
			if tool and tool:FindFirstChild("RemoteEvent") then
				tool.RemoteEvent:FireServer(player.Character.Humanoid, 100, {
					[1] = 203.83062744140625,
					[2] = CFrame.new(-45.51131820678711, 102.98486328125, -113.49867248535156) * CFrame.Angles(-math.pi, 1.5021963119506836, -math.pi)
				})
			else
				warn("a")
			end
		end
	end
end)

Main:CreateToggle("Heal all", function(enabled)
	while enabled do
		for i, player in pairs(Players:GetPlayers()) do
			if player ~= Player and Player.Character then
				local tool = Player.Character:FindFirstChildWhichIsA("Tool")

				if tool and tool:FindFirstChild("RemoteEvent") then
					tool.RemoteEvent:FireServer(player.Character.Humanoid, -100, {
						[1] = 203.83062744140625,
						[2] = CFrame.new(-45.51131820678711, 102.98486328125, -113.49867248535156) * CFrame.Angles(-math.pi, 1.5021963119506836, -math.pi)
					})
				else
					warn("a")
				end
			end
		end
		
		task.wait(0.2)
	end
end)

Main:CreateToggle("Damage all", function(enabled)
	while enabled do
		for i, player in pairs(Players:GetPlayers()) do
			if player ~= Player and Player.Character then
				local tool = Player.Character:FindFirstChildWhichIsA("Tool")

				if tool and tool:FindFirstChild("RemoteEvent") then
					local dmg = player.Character.Humanoid.Health - 2
					
					tool.RemoteEvent:FireServer(player.Character.Humanoid, dmg, {
						[1] = 203.83062744140625,
						[2] = CFrame.new(-45.51131820678711, 102.98486328125, -113.49867248535156) * CFrame.Angles(-math.pi, 1.5021963119506836, -math.pi)
					})
				end
			end
		end

		task.wait(0.2)
	end
end)

--

local Hitbox = Menu:CreateSection("Hitbox")

Hitbox:CreateToggle("Hitbox enabled", function(enabled)
	states.HitboxEnabled = enabled
end)

Hitbox:CreateSlider("Hitbox size", 100, function(value)
	states.HitboxSize = 1 + value
end)

--

local ESP = Menu:CreateSection("ESP")

ESP:CreateToggle("Nametags enabled", function(enabled)
	states.Nametags = enabled
end)

ESP:CreateToggle("Highlight enabled", function(enabled)
	states.Highlight = enabled
end)

local CurrentlyViewing

ESP:CreateTextBox("Username", "View", function(input: string)
	local inputLower = input:lower()
	local matchedPlayer = nil

	-- Search for the first player whose name starts with the input
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= Player and player.Name:lower():sub(1, #inputLower) == inputLower then
			matchedPlayer = player
			break
		end
	end

	if matchedPlayer then
		CurrentlyViewing = matchedPlayer
		print("Now spectating:", matchedPlayer.Name)

		local char = matchedPlayer.Character
		if char then
			local hrp = char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Head")
			if hrp then
				workspace.CurrentCamera.CameraSubject = hrp
			end
		end
	else
		print("No player found starting with:", input)
	end
end)

ESP:CreateButton("Stop viewing", function()
	CurrentlyViewing = nil
	workspace.CurrentCamera.CameraSubject = Player.Character and Player.Character:FindFirstChild("Humanoid")
		or workspace.CurrentCamera
end)

--

local espCache = {}
RunService.RenderStepped:Connect(function()
	for _, enemy in ipairs(Players:GetPlayers()) do
		if enemy ~= Player and enemy.Team ~= Player.Team then
			local character = enemy.Character
			local humanoid = character and character:FindFirstChildWhichIsA("Humanoid")
			local hrp = character and character:FindFirstChild("HumanoidRootPart")

			if character and humanoid and humanoid.Health > 0 and hrp then
				-- Hitbox
				if states.HitboxEnabled then
					hrp.Size = Vector3.one * states.HitboxSize
					hrp.Transparency = 0.5
					hrp.CanCollide = false
				else
					hrp.Size = Vector3.one * 2
					hrp.Transparency = 1
					hrp.CanCollide = false
				end

				-- ESP cache setup
				espCache[enemy] = espCache[enemy] or {}

				-- Nametag
				if states.Nametags then
					if not espCache[enemy].billboard then
						local bb = Instance.new("BillboardGui")
						bb.AlwaysOnTop = true
						bb.Size = UDim2.new(0, 100, 0, 20)
						bb.StudsOffset = Vector3.new(0, 5, 0)

						local label = Instance.new("TextLabel", bb)
						label.Size = UDim2.new(1, 0, 1, 0)
						label.BackgroundTransparency = 1
						label.Text = enemy.DisplayName
						label.TextColor3 = Color3.new(1, 0, 0)
						label.TextStrokeTransparency = 0
						label.TextScaled = true
						label.Font = Enum.Font.SourceSansBold
						
						espCache[enemy].billboard = bb
					end
					
					espCache[enemy].billboard.Adornee = hrp
					espCache[enemy].billboard.Parent = character
					
				elseif espCache[enemy].billboard then
					espCache[enemy].billboard:Destroy()
					espCache[enemy].billboard = nil
				end

				-- Highlight
				if states.Highlight then
					if not espCache[enemy].highlight then
						local hl = Instance.new("Highlight")
						hl.Name = "EnemyHighlight"
						hl.FillTransparency = 1
						hl.OutlineColor = Color3.new(1, 0, 0)
						espCache[enemy].highlight = hl
					end
					
					espCache[enemy].highlight.Adornee = character
					espCache[enemy].highlight.Parent = character
					
				elseif espCache[enemy].highlight then
					espCache[enemy].highlight:Destroy()
					espCache[enemy].highlight = nil
				end

			else
				-- Cleanup if dead or missing parts
				if espCache[enemy] then
					if espCache[enemy].billboard then espCache[enemy].billboard:Destroy() end
					if espCache[enemy].highlight then espCache[enemy].highlight:Destroy() end
					espCache[enemy] = nil
				end
				
				if hrp then
					hrp.Size = Vector3.one
				end
			end
		end
	end
end)


--

local MT = getrawmetatable(game)
local Old = MT.__namecall
setreadonly(MT, false)

MT.__namecall = newcclosure(function(Remote, ...) 
	local Args = {...}
	local Method = getnamecallmethod()

	if Remote.Name == "RemoteEvent" and Method == "FireServer" then
		if Args[2] ~= nil and typeof(Args[2]) == "number" then
			local Multiplier = tonumber(states.Multiplier)

			if Multiplier ~= nil then
				Args[2] = (Args[2] * Multiplier)

				Remote[Method](Remote, unpack(Args))
			end
		end
	end

	return Old(Remote, ...)
end)
setreadonly(MT, true)
--]]
